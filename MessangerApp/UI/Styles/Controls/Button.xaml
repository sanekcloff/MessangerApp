<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="WindowStateButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPassiveColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextBlock.FontSize="18"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Background" Value="{DynamicResource WindowStateButtonColor_Focused}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextActiveColorAlt}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Background" Value="{DynamicResource WindowStateButtonColor_Pressed}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextActiveColorAlt}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPassiveColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="15"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Padding="15,5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextActiveColor}"/>
                <Setter Property="BorderThickness" Value="0,0,0,2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource TextActiveColorAlt}"/>
                <Setter Property="Background" Value="{DynamicResource AccentColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TranparentButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPassiveColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        CornerRadius="15"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Padding="15,5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextActiveColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource TextActiveColor}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemeButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="{DynamicResource Theme}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Theme_Focused}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Theme_Pressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--#region UserPanel-->

    <Style x:Key="UserStatus" TargetType="Button">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource Offline}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Ellipse Margin="{TemplateBinding Margin}"
                         Fill="{TemplateBinding Background}"/>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding CurrentUser.Status, UpdateSourceTrigger=PropertyChanged}" Value="Online">
                            <Setter Property="Background" Value="{DynamicResource Online}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CurrentUser.Status, UpdateSourceTrigger=PropertyChanged}" Value="Ofline">
                            <Setter Property="Background" Value="{DynamicResource Offline}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CurrentUser.Status, UpdateSourceTrigger=PropertyChanged}" Value="IsBussy">
                            <Setter Property="Background" Value="{DynamicResource IsBussy}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CurrentUser.Status, UpdateSourceTrigger=PropertyChanged}" Value="IsMoveAway">
                            <Setter Property="Background" Value="{DynamicResource IsMoveAway}"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserProfileSettings" TargetType="Button">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">

                        <Grid Margin="2">

                            <Grid x:Name="Settings" Opacity="0" Panel.ZIndex="2">

                                <Label Content="CHANGE" Foreground="White"
                                       FontSize="10"
                                       Panel.ZIndex="3"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>

                                <Ellipse  Width="{Binding ElementName=Avatar, Path=Width}" Height="{Binding ElementName=Avatar, Path=Height}" Fill="{DynamicResource AccentColor}" Panel.ZIndex="2"/>

                            </Grid>

                            <Button Style="{StaticResource UserStatus}"
                                    Height="15"
                                    Width="15"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Panel.ZIndex="4"/>

                            <Ellipse x:Name="Avatar"
                                     Width="50"
                                     Height="50"
                                     Fill="{Binding CurrentUser.DisplayImage, UpdateSourceTrigger=PropertyChanged}"
                                     Panel.ZIndex="1"/>

                            <Ellipse x:Name="Background"
                                     Width="{Binding ElementName=Avatar, Path=Width}"
                                     Height="{Binding ElementName=Avatar, Path=Height}"
                                     Fill="{Binding CurrentUser.Color, UpdateSourceTrigger=PropertyChanged, FallbackValue=Red}"
                                     Visibility="Collapsed"/>

                        </Grid>

                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" SourceName="Settings" Value="True">
                            <Setter Property="Opacity" TargetName="Settings" Value=".4"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Settings" Value=".4"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding CurrentUser.Image}" Value="{x:Null}">
                            <Setter TargetName="Background" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->

</ResourceDictionary>